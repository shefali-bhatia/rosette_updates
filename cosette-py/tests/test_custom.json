{
  "schemas" : [ {
    "types" : [ "INTEGER", "INTEGER", "VARCHAR", "VARCHAR" ],
    "strategy" : [ "NULLABLE", "NULLABLE", "NULLABLE", "NULLABLE" ],
    "key" : [ ],
    "foreign" : [ ]
  } ],
  "queries" : [ {
    "project" : {
      "target" : [ {
        "column" : 0,
        "type" : "INTEGER"
      }, {
        "column" : 1,
        "type" : "INTEGER"
      }, {
        "column" : 2,
        "type" : "VARCHAR"
      }, {
        "column" : 3,
        "type" : "VARCHAR"
      } ],
      "source" : {
        "filter" : {
          "condition" : {
            "operator" : "AND",
            "operand" : [ {
              "operator" : "=",
              "operand" : [ {
                "column" : 0,
                "type" : "INTEGER"
              }, {
                "operator" : "1",
                "operand" : [ ],
                "type" : "INTEGER"
              } ],
              "type" : "BOOLEAN"
            }, {
              "operator" : "LIKE",
              "operand" : [ {
                "column" : 2,
                "type" : "VARCHAR"
              }, {
                "operator" : "_ISO-8859-1'%TEST%'",
                "operand" : [ ],
                "type" : "CHAR"
              } ],
              "type" : "BOOLEAN"
            }, {
              "operator" : "LIKE",
              "operand" : [ {
                "column" : 3,
                "type" : "VARCHAR"
              }, {
                "operator" : "_ISO-8859-1'%TEST3%'",
                "operand" : [ ],
                "type" : "CHAR"
              } ],
              "type" : "BOOLEAN"
            } ],
            "type" : "BOOLEAN"
          },
          "source" : {
            "scan" : 0
          }
        }
      }
    }
  }, {
    "project" : {
      "target" : [ {
        "column" : 0,
        "type" : "INTEGER"
      }, {
        "column" : 1,
        "type" : "INTEGER"
      }, {
        "column" : 2,
        "type" : "VARCHAR"
      }, {
        "column" : 3,
        "type" : "VARCHAR"
      } ],
      "source" : {
        "filter" : {
          "condition" : {
            "operator" : "AND",
            "operand" : [ {
              "operator" : "=",
              "operand" : [ {
                "column" : 0,
                "type" : "INTEGER"
              }, {
                "operator" : "2",
                "operand" : [ ],
                "type" : "INTEGER"
              } ],
              "type" : "BOOLEAN"
            }, {
              "operator" : "LIKE",
              "operand" : [ {
                "column" : 2,
                "type" : "VARCHAR"
              }, {
                "operator" : "_ISO-8859-1'%TEST%'",
                "operand" : [ ],
                "type" : "CHAR"
              } ],
              "type" : "BOOLEAN"
            }, {
              "operator" : "LIKE",
              "operand" : [ {
                "column" : 3,
                "type" : "VARCHAR"
              }, {
                "operator" : "_ISO-8859-1'%TEST3%'",
                "operand" : [ ],
                "type" : "CHAR"
              } ],
              "type" : "BOOLEAN"
            } ],
            "type" : "BOOLEAN"
          },
          "source" : {
            "scan" : 0
          }
        }
      }
    }
  } ],
  "help" : [ "LogicalProject(CMTE_ID=[$0], TRANSACTION_AMT=[$1], NAME=[$2], STR_NAME=[$3])\n  LogicalFilter(condition=[AND(=($0, 1), LIKE($2, '%test%'), LIKE($3, '%test3%'))])\n    LogicalTableScan(table=[[INDIV_SAMPLE_NYC]])\n", "LogicalProject(CMTE_ID=[$0], TRANSACTION_AMT=[$1], NAME=[$2], STR_NAME=[$3])\n  LogicalFilter(condition=[AND(=($0, 2), LIKE($2, '%test%'), LIKE($3, '%test3%'))])\n    LogicalTableScan(table=[[INDIV_SAMPLE_NYC]])\n" ]
}