
#lang rosette 
 
(require "../cosette.rkt" "../util.rkt" "../denotation.rkt" "../cosette.rkt" "../sql.rkt" "../evaluator.rkt" "../syntax.rkt" "../symmetry.rkt" "../test-util.rkt") 
  
(provide ros-instance)  
 
(current-bitwidth #f)

(define t0 (table-info "input" (list "ID" "Payment_type")))
 
(define (q2 tables) 
(UNION-ALL (SELECT (VALS "t1.ID" "t1.Payment_type" )
 FROM (AS (JOIN (AS (SELECT (VALS "t6.ID" (VAL-UNOP aggr-count (val-column-ref "t6.ID")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t6" (list "ID" "Payment_type")])
 WHERE (TRUE)
 GROUP-BY (list "t6.ID" )
 HAVING (TRUE)) ["t9" (list "ID" "count_ID")]) (AS (SELECT (VALS "t7.ID" "t7.Payment_type" (VAL-UNOP aggr-count (val-column-ref "t7.ID")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t7" (list "ID" "Payment_type")])
 WHERE (TRUE)
 GROUP-BY (list "t7.ID" "t7.Payment_type" )
 HAVING (TRUE)) ["t3" (list "ID" "Payment_type" "count_ID")])) ["t1" (list "ID" "count_ID" "ID1" "Payment_type" "count_ID1")])
 WHERE (AND (BINOP "t1.ID" = "t1.ID1") (BINOP "t1.count_ID" = "t1.count_ID1"))) (SELECT (VALS "t10.ID" "t10.Payment_type" )
 FROM (AS (JOIN (AS (SELECT (VALS "t5.ID" "t5.Payment_type" (VAL-UNOP aggr-count (val-column-ref "t5.ID")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t5" (list "ID" "Payment_type")])
 WHERE (TRUE)
 GROUP-BY (list "t5.ID" "t5.Payment_type" )
 HAVING (TRUE)) ["t2" (list "ID" "Payment_type" "count_ID")]) (AS (SELECT (VALS "t4.Payment_type" (VAL-UNOP aggr-count (val-column-ref "t4.ID")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t4" (list "ID" "Payment_type")])
 WHERE (TRUE)
 GROUP-BY (list "t4.Payment_type" )
 HAVING (TRUE)) ["t8" (list "Payment_type" "count_ID")])) ["t10" (list "ID" "Payment_type" "count_ID" "Payment_type1" "count_ID1")])
 WHERE (AND (BINOP "t10.count_ID" > "t10.count_ID1") (TRUE)))))
 
(define (q1 tables) 
(UNION-ALL (SELECT (VALS "t1.ID" "t1.Payment_type" )
 FROM (AS (JOIN (AS (SELECT (VALS "t4.ID" (VAL-UNOP aggr-count (val-column-ref "t4.ID")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t4" (list "ID" "Payment_type")])
 WHERE (TRUE)
 GROUP-BY (list "t4.ID" )
 HAVING (TRUE)) ["t10" (list "ID" "count_ID")]) (AS (SELECT (VALS "t5.ID" "t5.Payment_type" (VAL-UNOP aggr-count (val-column-ref "t5.ID")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t5" (list "ID" "Payment_type")])
 WHERE (TRUE)
 GROUP-BY (list "t5.ID" "t5.Payment_type" )
 HAVING (TRUE)) ["t3" (list "ID" "Payment_type" "count_ID")])) ["t1" (list "ID" "count_ID" "ID1" "Payment_type" "count_ID1")])
 WHERE (AND (BINOP "t1.ID" = "t1.ID1") (BINOP "t1.count_ID" = "t1.count_ID1"))) (SELECT (VALS "t9.ID" "t9.Payment_type" )
 FROM (AS (JOIN (AS (SELECT (VALS "t7.ID" "t7.Payment_type" (VAL-UNOP aggr-count (val-column-ref "t7.Payment_type")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t7" (list "ID" "Payment_type")])
 WHERE (TRUE)
 GROUP-BY (list "t7.ID" "t7.Payment_type" )
 HAVING (TRUE)) ["t6" (list "ID" "Payment_type" "count_Payment_type")]) (AS (SELECT (VALS "t2.ID" "t2.Payment_type" (VAL-UNOP aggr-count (val-column-ref "t2.Payment_type")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t2" (list "ID" "Payment_type")])
 WHERE (TRUE)
 GROUP-BY (list "t2.ID" "t2.Payment_type" )
 HAVING (TRUE)) ["t8" (list "ID" "Payment_type" "count_Payment_type")])) ["t9" (list "ID" "Payment_type" "count_Payment_type" "ID1" "Payment_type1" "count_Payment_type1")])
 WHERE (AND (BINOP "t9.count_Payment_type" > "t9.count_Payment_type1") (TRUE)))))

(define ros-instance (list q1 q2 (list t0)))
