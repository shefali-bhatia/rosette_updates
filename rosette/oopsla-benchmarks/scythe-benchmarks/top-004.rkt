#lang rosette 
 
(require "../cosette.rkt" "../util.rkt" "../denotation.rkt" "../cosette.rkt" "../sql.rkt" "../evaluator.rkt" "../syntax.rkt" "../symmetry.rkt" "../test-util.rkt") 
  
(provide ros-instance)  

(current-bitwidth #f)

(define t0 (table-info "input" (list "id" "rev" "content")))
 
(define (q5 tables) 
(SELECT (VALS "t4.id" "t4.rev" "t4.content" )
 FROM (AS (JOIN (AS (SELECT (VALS (VAL-UNOP aggr-max (val-column-ref "t1.id")) )
 FROM (AS (SELECT (VALS "input.id" "input.rev" "input.content" )
 FROM (NAMED (list-ref tables 0))
 WHERE (AND (BINOP "input.id" (lambda (x y) (not (equal? x y))) "input.rev") (TRUE))) ["t1" (list "id" "rev" "content")])
 WHERE (TRUE)
 GROUP-BY (list )
 HAVING (TRUE)) ["t2" (list "max_id")]) (AS (SELECT (VALS "input.id" "input.rev" "input.content" )
 FROM (NAMED (list-ref tables 0))
 WHERE (AND (BINOP "input.id" (lambda (x y) (not (equal? x y))) "input.rev") (TRUE))) ["t3" (list "id" "rev" "content")])) ["t4" (list "max_id" "id" "rev" "content")])
 WHERE (AND (TRUE) (BINOP "t4.max_id" (lambda (x y) (not (equal? x y))) "t4.rev"))))
 
(define (q4 tables) 
(SELECT (VALS "t4.id" "t4.rev1" "t4.content" )
 FROM (AS (JOIN (AS (SELECT (VALS "t1.rev" (VAL-UNOP aggr-max (val-column-ref "t1.id")) )
 FROM (AS (SELECT (VALS "input.id" "input.rev" "input.content" )
 FROM (NAMED (list-ref tables 0))
 WHERE (AND (BINOP "input.id" >= "input.rev") (TRUE))) ["t1" (list "id" "rev" "content")])
 WHERE (TRUE)
 GROUP-BY (list "t1.rev" )
 HAVING (TRUE)) ["t3" (list "rev" "max_id")]) (AS (SELECT (VALS "input.id" "input.rev" "input.content" )
 FROM (NAMED (list-ref tables 0))
 WHERE (AND (BINOP "input.id" (lambda (x y) (not (equal? x y))) "input.rev") (TRUE))) ["t2" (list "id" "rev" "content")])) ["t4" (list "rev" "max_id" "id" "rev1" "content")])
 WHERE (AND (TRUE) (BINOP "t4.max_id" (lambda (x y) (not (equal? x y))) "t4.rev1"))))
 
(define (q3 tables) 
(SELECT (VALS "t3.id1" "t3.rev1" "t3.content1" )
 FROM (AS (JOIN (SELECT (VALS "input.id" "input.rev" "input.content" )
 FROM (NAMED (list-ref tables 0))
 WHERE (AND (BINOP "input.id" > "input.rev") (TRUE))) (AS (SELECT (VALS "input.id" "input.rev" "input.content" )
 FROM (NAMED (list-ref tables 0))
 WHERE (AND (BINOP "input.id" (lambda (x y) (not (equal? x y))) "input.rev") (TRUE))) ["t2" (list "id" "rev" "content")])) ["t3" (list "id" "rev" "content" "id1" "rev1" "content1")])
 WHERE (AND (TRUE) (BINOP "t3.id" (lambda (x y) (not (equal? x y))) "t3.rev1"))))
 
(define (q2 tables) 
(SELECT (VALS "t1.id" "t1.rev1" "t1.content" )
 FROM (AS (JOIN (AS (SELECT (VALS "t2.rev" (VAL-UNOP aggr-max (val-column-ref "t2.id")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t2" (list "id" "rev" "content")])
 WHERE (TRUE)
 GROUP-BY (list "t2.rev" )
 HAVING (TRUE)) ["t4" (list "rev" "max_id")]) (AS (SELECT (VALS "input.id" "input.rev" "input.content" )
 FROM (NAMED (list-ref tables 0))
 WHERE (AND (BINOP "input.id" (lambda (x y) (not (equal? x y))) "input.rev") (TRUE))) ["t3" (list "id" "rev" "content")])) ["t1" (list "rev" "max_id" "id" "rev1" "content")])
 WHERE (AND (BINOP "t1.rev" <= "t1.id") (BINOP "t1.max_id" (lambda (x y) (not (equal? x y))) "t1.rev1"))))
 
(define (q1 tables) 
(SELECT (VALS "t1.id" "t1.rev" "t1.content" )
 FROM (AS (JOIN (AS (SELECT (VALS (VAL-UNOP aggr-max (val-column-ref "t2.id")) )
 FROM (AS (SELECT (VALS "input.id" "input.rev" "input.content" )
 FROM (NAMED (list-ref tables 0))
 WHERE (AND (BINOP "input.id" >= "input.rev") (TRUE))) ["t2" (list "id" "rev" "content")])
 WHERE (TRUE)
 GROUP-BY (list )
 HAVING (TRUE)) ["t3" (list "max_id")]) (AS (SELECT (VALS "input.id" "input.rev" "input.content" )
 FROM (NAMED (list-ref tables 0))
 WHERE (AND (BINOP "input.id" (lambda (x y) (not (equal? x y))) "input.rev") (TRUE))) ["t4" (list "id" "rev" "content")])) ["t1" (list "max_id" "id" "rev" "content")])
 WHERE (AND (TRUE) (BINOP "t1.max_id" (lambda (x y) (not (equal? x y))) "t1.rev"))))

(define ros-instance (list q1 q2 (list t0)))
