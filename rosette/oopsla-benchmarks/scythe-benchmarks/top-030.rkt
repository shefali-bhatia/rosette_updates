#lang rosette 
 
(require "../cosette.rkt" "../util.rkt" "../denotation.rkt" "../cosette.rkt" "../sql.rkt" "../evaluator.rkt" "../syntax.rkt" "../symmetry.rkt" "../test-util.rkt") 
  
(provide ros-instance)  

(current-bitwidth #f)

(define t0 (table-info "input" (list "Person" "Group" "Age")))
 
(define (q5 tables) 
(SELECT (VALS "t2.Person" "t2.Group1" "t2.Age" )
 FROM (AS (SELECT (VALS "t1.Person" "t1.Age" "t1.Group1" (VAL-UNOP aggr-count (val-column-ref "t1.Group")) )
 FROM (AS (SELECT (VALS "t4.Person" "t4.Group" "t4.Age" "t4.Person1" "t4.Group1" "t4.Age1" )
 FROM (AS (JOIN (NAMED (list-ref tables 0)) (AS (NAMED (list-ref tables 0)) ["t3" (list "Person" "Group" "Age")])) ["t4" (list "Person" "Group" "Age" "Person1" "Group1" "Age1")])
 WHERE (AND (BINOP "t4.Group" = "t4.Group1") (BINOP "t4.Age" > "t4.Age1"))) ["t1" (list "Person" "Group" "Age" "Person1" "Group1" "Age1")])
 WHERE (TRUE)
 GROUP-BY (list "t1.Person" "t1.Age" "t1.Group1" )
 HAVING (TRUE)) ["t2" (list "Person" "Age" "Group1" "count_Group")])
 WHERE (AND (BINOP "t2.count_Group" >= 2.0) (TRUE))))
 
(define (q4 tables) 
(SELECT (VALS "t3.Person" "t3.Group1" "t3.Age" )
 FROM (AS (SELECT (VALS "t4.Person" "t4.Group" "t4.Age" "t4.Group1" (VAL-UNOP aggr-count (val-column-ref "t4.Person")) )
 FROM (AS (SELECT (VALS "t1.Person" "t1.Group" "t1.Age" "t1.Person1" "t1.Group1" "t1.Age1" )
 FROM (AS (JOIN (NAMED (list-ref tables 0)) (AS (NAMED (list-ref tables 0)) ["t2" (list "Person" "Group" "Age")])) ["t1" (list "Person" "Group" "Age" "Person1" "Group1" "Age1")])
 WHERE (AND (BINOP "t1.Group" = "t1.Group1") (BINOP "t1.Age" <= "t1.Age1"))) ["t4" (list "Person" "Group" "Age" "Person1" "Group1" "Age1")])
 WHERE (TRUE)
 GROUP-BY (list "t4.Person" "t4.Group" "t4.Age" "t4.Group1" )
 HAVING (TRUE)) ["t3" (list "Person" "Group" "Age" "Group1" "count_Person")])
 WHERE (AND (BINOP "t3.count_Person" <= 2.0) (TRUE))))
 
(define (q3 tables) 
(SELECT (VALS "t1.Person" "t1.Group1" "t1.Age" )
 FROM (AS (SELECT (VALS "t2.Person" "t2.Group" "t2.Age" "t2.Group1" (VAL-UNOP aggr-count (val-column-ref "t2.Person1")) )
 FROM (AS (SELECT (VALS "t3.Person" "t3.Group" "t3.Age" "t3.Person1" "t3.Group1" "t3.Age1" )
 FROM (AS (JOIN (NAMED (list-ref tables 0)) (AS (NAMED (list-ref tables 0)) ["t4" (list "Person" "Group" "Age")])) ["t3" (list "Person" "Group" "Age" "Person1" "Group1" "Age1")])
 WHERE (AND (BINOP "t3.Group" = "t3.Group1") (BINOP "t3.Age" > "t3.Age1"))) ["t2" (list "Person" "Group" "Age" "Person1" "Group1" "Age1")])
 WHERE (TRUE)
 GROUP-BY (list "t2.Person" "t2.Group" "t2.Age" "t2.Group1" )
 HAVING (TRUE)) ["t1" (list "Person" "Group" "Age" "Group1" "count_Person1")])
 WHERE (AND (BINOP "t1.count_Person1" >= 2.0) (TRUE))))
 
(define (q2 tables) 
(SELECT (VALS "t4.Person1" "t4.Group1" "t4.Age1" )
 FROM (AS (SELECT (VALS "t2.Person1" "t2.Group1" "t2.Age1" (VAL-UNOP aggr-count (val-column-ref "t2.Person")) )
 FROM (AS (SELECT (VALS "t3.Person" "t3.Group" "t3.Age" "t3.Person1" "t3.Group1" "t3.Age1" )
 FROM (AS (JOIN (NAMED (list-ref tables 0)) (AS (NAMED (list-ref tables 0)) ["t1" (list "Person" "Group" "Age")])) ["t3" (list "Person" "Group" "Age" "Person1" "Group1" "Age1")])
 WHERE (AND (BINOP "t3.Group" = "t3.Group1") (BINOP "t3.Age" >= "t3.Age1"))) ["t2" (list "Person" "Group" "Age" "Person1" "Group1" "Age1")])
 WHERE (TRUE)
 GROUP-BY (list "t2.Person1" "t2.Group1" "t2.Age1" )
 HAVING (TRUE)) ["t4" (list "Person1" "Group1" "Age1" "count_Person")])
 WHERE (AND (TRUE) (BINOP "t4.count_Person" <= 2.0))))
 
(define (q1 tables) 
(SELECT (VALS "t3.Person" "t3.Group" "t3.Age" )
 FROM (AS (SELECT (VALS "t4.Person" "t4.Group" "t4.Age" (VAL-UNOP aggr-count (val-column-ref "t4.Group")) )
 FROM (AS (SELECT (VALS "t1.Person" "t1.Group" "t1.Age" "t1.Person1" "t1.Group1" "t1.Age1" )
 FROM (AS (JOIN (NAMED (list-ref tables 0)) (AS (NAMED (list-ref tables 0)) ["t2" (list "Person" "Group" "Age")])) ["t1" (list "Person" "Group" "Age" "Person1" "Group1" "Age1")])
 WHERE (AND (BINOP "t1.Group" = "t1.Group1") (BINOP "t1.Age" >= "t1.Age1"))) ["t4" (list "Person" "Group" "Age" "Person1" "Group1" "Age1")])
 WHERE (TRUE)
 GROUP-BY (list "t4.Person" "t4.Group" "t4.Age" )
 HAVING (TRUE)) ["t3" (list "Person" "Group" "Age" "count_Group")])
 WHERE (AND (BINOP "t3.count_Group" > 2.0) (TRUE))))

(define ros-instance (list q1 q2 (list t0)))
