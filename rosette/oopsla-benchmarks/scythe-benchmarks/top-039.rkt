#lang rosette 
 
(require "../cosette.rkt" "../util.rkt" "../denotation.rkt" "../cosette.rkt" "../sql.rkt" "../evaluator.rkt" "../syntax.rkt" "../symmetry.rkt" "../test-util.rkt") 
  
(provide ros-instance)  

(current-bitwidth #f)

(define t0 (table-info "input" (list "c")))
 
(define (q4 tables) 
(SELECT (VALS "t5.c" )
 FROM (AS (JOIN (AS (SELECT (VALS "t1.count_c" (VAL-UNOP aggr-count (val-column-ref "t1.count_c")) )
 FROM (AS (SELECT (VALS "t2.c" (VAL-UNOP aggr-count (val-column-ref "t2.c")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t2" (list "c")])
 WHERE (TRUE)
 GROUP-BY (list "t2.c" )
 HAVING (TRUE)) ["t1" (list "c" "count_c")])
 WHERE (TRUE)
 GROUP-BY (list "t1.count_c" )
 HAVING (TRUE)) ["t4" (list "count_c" "count_count_c")]) (AS (SELECT (VALS "t3.c" (VAL-UNOP aggr-count (val-column-ref "t3.c")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t3" (list "c")])
 WHERE (TRUE)
 GROUP-BY (list "t3.c" )
 HAVING (TRUE)) ["t6" (list "c" "count_c")])) ["t5" (list "count_c" "count_count_c" "c" "count_c1")])
 WHERE (AND (BINOP "t5.count_c" < "t5.count_c1") (TRUE))))
 
(define (q3 tables) 
(SELECT (VALS "t3.c" )
 FROM (AS (JOIN (AS (SELECT (VALS "t5.count_c" (VAL-UNOP aggr-count (val-column-ref "t5.c")) )
 FROM (AS (SELECT (VALS "t6.c" (VAL-UNOP aggr-count (val-column-ref "t6.c")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t6" (list "c")])
 WHERE (TRUE)
 GROUP-BY (list "t6.c" )
 HAVING (TRUE)) ["t5" (list "c" "count_c")])
 WHERE (TRUE)
 GROUP-BY (list "t5.count_c" )
 HAVING (TRUE)) ["t2" (list "count_c" "count_c1")]) (AS (SELECT (VALS "t1.c" (VAL-UNOP aggr-count (val-column-ref "t1.c")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t1" (list "c")])
 WHERE (TRUE)
 GROUP-BY (list "t1.c" )
 HAVING (TRUE)) ["t4" (list "c" "count_c")])) ["t3" (list "count_c" "count_c1" "c" "count_c2")])
 WHERE (AND (BINOP "t3.count_c" < "t3.count_c2") (TRUE))))
 
(define (q2 tables) 
(SELECT (VALS "t5.c" )
 FROM (AS (JOIN (AS (SELECT (VALS "t3.count_c" )
 FROM (AS (SELECT (VALS "t1.c" (VAL-UNOP aggr-count (val-column-ref "t1.c")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t1" (list "c")])
 WHERE (TRUE)
 GROUP-BY (list "t1.c" )
 HAVING (TRUE)) ["t3" (list "c" "count_c")])
 WHERE (TRUE)
 GROUP-BY (list "t3.count_c" )
 HAVING (TRUE)) ["t2" (list "count_c")]) (AS (SELECT (VALS "t6.c" (VAL-UNOP aggr-count (val-column-ref "t6.c")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t6" (list "c")])
 WHERE (TRUE)
 GROUP-BY (list "t6.c" )
 HAVING (TRUE)) ["t4" (list "c" "count_c")])) ["t5" (list "count_c" "c" "count_c1")])
 WHERE (AND (BINOP "t5.count_c" < "t5.count_c1") (TRUE))))
 
(define (q1 tables) 
(SELECT (VALS "t5.c" )
 FROM (AS (JOIN (AS (SELECT (VALS (VAL-UNOP aggr-max (val-column-ref "t6.count_c")) )
 FROM (AS (SELECT (VALS "t4.c" (VAL-UNOP aggr-count (val-column-ref "t4.c")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t4" (list "c")])
 WHERE (TRUE)
 GROUP-BY (list "t4.c" )
 HAVING (TRUE)) ["t6" (list "c" "count_c")])
 WHERE (TRUE)
 GROUP-BY (list )
 HAVING (TRUE)) ["t1" (list "max_count_c")]) (AS (SELECT (VALS "t3.c" (VAL-UNOP aggr-count (val-column-ref "t3.c")) )
 FROM (AS (NAMED (list-ref tables 0)) ["t3" (list "c")])
 WHERE (TRUE)
 GROUP-BY (list "t3.c" )
 HAVING (TRUE)) ["t2" (list "c" "count_c")])) ["t5" (list "max_count_c" "c" "count_c")])
 WHERE (AND (BINOP "t5.max_count_c" = "t5.count_c") (TRUE))))

(define ros-instance (list q1 q2 (list t0)))

