#lang rosette 
 
(require "../cosette.rkt" "../util.rkt" "../denotation.rkt" "../cosette.rkt" "../sql.rkt" "../evaluator.rkt" "../syntax.rkt" "../symmetry.rkt" "../test-util.rkt") 
  
(provide ros-instance)  

(current-bitwidth #f)

(define t0 (table-info "input" (list "id" "section_id" "name")))
 
(define (q5 tables) 
(SELECT (VALS "t2.id" "t2.section_id" "t2.name" )
 FROM (AS (SELECT (VALS "t1.id" "t1.section_id" "t1.name" (VAL-UNOP aggr-count (val-column-ref "t1.name1")) )
 FROM (AS (SELECT (VALS "t4.id" "t4.section_id" "t4.name" "t4.id1" "t4.section_id1" "t4.name1" )
 FROM (AS (JOIN (NAMED (list-ref tables 0)) (AS (NAMED (list-ref tables 0)) ["t3" (list "id" "section_id" "name")])) ["t4" (list "id" "section_id" "name" "id1" "section_id1" "name1")])
 WHERE (AND (BINOP "t4.id" >= "t4.id1") (BINOP "t4.section_id" = "t4.section_id1"))) ["t1" (list "id" "section_id" "name" "id1" "section_id1" "name1")])
 WHERE (TRUE)
 GROUP-BY (list "t1.id" "t1.section_id" "t1.name" )
 HAVING (TRUE)) ["t2" (list "id" "section_id" "name" "count_name1")])
 WHERE (AND (BINOP "t2.count_name1" <= 2.0) (TRUE))))
 
(define (q4 tables) 
(SELECT (VALS "t2.id1" "t2.section_id" "t2.name1" )
 FROM (AS (SELECT (VALS "t1.section_id" "t1.id1" "t1.section_id1" "t1.name1" (VAL-UNOP aggr-count (val-column-ref "t1.name")) )
 FROM (AS (SELECT (VALS "t3.id" "t3.section_id" "t3.name" "t3.id1" "t3.section_id1" "t3.name1" )
 FROM (AS (JOIN (NAMED (list-ref tables 0)) (AS (NAMED (list-ref tables 0)) ["t4" (list "id" "section_id" "name")])) ["t3" (list "id" "section_id" "name" "id1" "section_id1" "name1")])
 WHERE (AND (BINOP "t3.section_id" = "t3.section_id1") (BINOP "t3.id" <= "t3.id1"))) ["t1" (list "id" "section_id" "name" "id1" "section_id1" "name1")])
 WHERE (TRUE)
 GROUP-BY (list "t1.section_id" "t1.id1" "t1.section_id1" "t1.name1" )
 HAVING (TRUE)) ["t2" (list "section_id" "id1" "section_id1" "name1" "count_name")])
 WHERE (AND (TRUE) (BINOP "t2.count_name" <= 2.0))))
 
(define (q3 tables) 
(SELECT (VALS "t2.id" "t2.section_id1" "t2.name" )
 FROM (AS (SELECT (VALS "t1.id" "t1.name" "t1.section_id1" (VAL-UNOP aggr-count (val-column-ref "t1.id1")) )
 FROM (AS (SELECT (VALS "t4.id" "t4.section_id" "t4.name" "t4.id1" "t4.section_id1" "t4.name1" )
 FROM (AS (JOIN (NAMED (list-ref tables 0)) (AS (NAMED (list-ref tables 0)) ["t3" (list "id" "section_id" "name")])) ["t4" (list "id" "section_id" "name" "id1" "section_id1" "name1")])
 WHERE (AND (BINOP "t4.id" >= "t4.id1") (BINOP "t4.section_id" = "t4.section_id1"))) ["t1" (list "id" "section_id" "name" "id1" "section_id1" "name1")])
 WHERE (TRUE)
 GROUP-BY (list "t1.id" "t1.name" "t1.section_id1" )
 HAVING (TRUE)) ["t2" (list "id" "name" "section_id1" "count_id1")])
 WHERE (AND (BINOP "t2.count_id1" <= 2.0) (TRUE))))
 
(define (q2 tables) 
(SELECT (VALS "t1.id1" "t1.section_id" "t1.name1" )
 FROM (AS (SELECT (VALS "t2.section_id" "t2.id1" "t2.name1" (VAL-UNOP aggr-count (val-column-ref "t2.section_id")) )
 FROM (AS (SELECT (VALS "t3.id" "t3.section_id" "t3.name" "t3.id1" "t3.section_id1" "t3.name1" )
 FROM (AS (JOIN (NAMED (list-ref tables 0)) (AS (NAMED (list-ref tables 0)) ["t4" (list "id" "section_id" "name")])) ["t3" (list "id" "section_id" "name" "id1" "section_id1" "name1")])
 WHERE (AND (BINOP "t3.section_id" = "t3.section_id1") (BINOP "t3.id" <= "t3.id1"))) ["t2" (list "id" "section_id" "name" "id1" "section_id1" "name1")])
 WHERE (TRUE)
 GROUP-BY (list "t2.section_id" "t2.id1" "t2.name1" )
 HAVING (TRUE)) ["t1" (list "section_id" "id1" "name1" "count_section_id")])
 WHERE (AND (TRUE) (BINOP "t1.count_section_id" <= 2.0))))
 
(define (q1 tables) 
(SELECT (VALS "t3.id1" "t3.section_id" "t3.name1" )
 FROM (AS (SELECT (VALS "t2.section_id" "t2.id1" "t2.section_id1" "t2.name1" (VAL-UNOP aggr-count (val-column-ref "t2.section_id")) )
 FROM (AS (SELECT (VALS "t4.id" "t4.section_id" "t4.name" "t4.id1" "t4.section_id1" "t4.name1" )
 FROM (AS (JOIN (NAMED (list-ref tables 0)) (AS (NAMED (list-ref tables 0)) ["t1" (list "id" "section_id" "name")])) ["t4" (list "id" "section_id" "name" "id1" "section_id1" "name1")])
 WHERE (AND (BINOP "t4.section_id" = "t4.section_id1") (BINOP "t4.id" <= "t4.id1"))) ["t2" (list "id" "section_id" "name" "id1" "section_id1" "name1")])
 WHERE (TRUE)
 GROUP-BY (list "t2.section_id" "t2.id1" "t2.section_id1" "t2.name1" )
 HAVING (TRUE)) ["t3" (list "section_id" "id1" "section_id1" "name1" "count_section_id")])
 WHERE (AND (TRUE) (BINOP "t3.count_section_id" <= 2.0))))

(define ros-instance (list q1 q5 (list t0)))
